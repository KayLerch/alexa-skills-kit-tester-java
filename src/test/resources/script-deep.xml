<?xml version="1.0"?>
<script xmlns="http://klerch.io/alexa/skills-kit-tester"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://klerch.io/alexa/skills-kit-tester testScript.xsd">
    <configuration>
        <endpoint type="Lambda">myLambdaFunctionName</endpoint>
        <locale>de-DE</locale>
        <timestamp>2010-09-30T11:11:11Z</timestamp>
        <user id="myUserId" accessToken="myAccessToken" />
        <application id="myApplicationId" />
        <debugFlagSessionAttribute>myDebugFlag</debugFlagSessionAttribute>
    </configuration>
    <sessions>
        <session>
            <launch>
                <assertSessionStateEquals key="myDebugFlag" value="true" />
                <isTrue assertion="HasCard">
                    <yes>
                        <assertExists asset="Card" />
                        <matches asset="OutputSpeechSsml" value=".*test.*">
                            <yes>
                                <assertSessionStillOpen />
                                <isTrue assertion="HasDirective">
                                    <help>
                                        <assertExists asset="DirectiveClearQueue"/>
                                    </help>
                                </isTrue>
                            </yes>
                            <cancel>
                                <assertSessionStillOpen />
                            </cancel>
                        </matches>
                    </yes>
                </isTrue>
                <isFalse assertion="HasDirective">
                    <no>
                        <assertNotExists asset="DirectiveClearQueue" />
                    </no>
                    <delay value="1000"/>
                </isFalse>
            </launch>
            <delay value="1000" />
            <intent name="intent0">
                <assertTrue assertion="HasCard" />
                <assertFalse assertion="SessionEnded" />
                <assertNotExists asset="OutputSpeechPlainText" />
                <assertNotEquals asset="OutputSpeechPlainText" value="test"/>
                <assertMatches asset="OutputSpeechSsml" value=".*test.*" />
                <assertExists asset="OutputSpeechSsml" />
            </intent>
            <intent name="intent1">
                <request>
                    <slots>
                        <slot key="slot1" value="val" />
                        <slot key="slot2" value="123" />
                    </slots>
                </request>
                <assertSessionStateEquals key="slot1" value="val" />
                <assertSessionStateEquals key="slot2" value="123" />
                <assertSessionStateEquals key="myDebugFlag" value="true" />
                <sessionEnded>
                    <help>
                        <assertExists asset="DirectivePlayAudioItem" />
                    </help>
                </sessionEnded>
                <sessionStillOpen>
                    <loopOn>
                        <sessionStateEquals key="slot1" value="val">
                            <next>
                                <sessionStateNotBlank key="slot1">
                                    <pause>
                                        <sessionStateNotNull key="slot1">
                                            <resume>
                                                <sessionStateContains key="slot1" value="va">
                                                    <shuffleOff>
                                                        <sessionStateMatches key="slot1" value="[alv]*">
                                                            <previous></previous>
                                                        </sessionStateMatches>
                                                    </shuffleOff>
                                                </sessionStateContains>
                                            </resume>
                                        </sessionStateNotNull>
                                    </pause>
                                </sessionStateNotBlank>
                            </next>
                        </sessionStateEquals>
                    </loopOn>
                </sessionStillOpen>
            </intent>
            <yes>
                <assertSessionStateEquals key="intent" value="AMAZON.YesIntent" />
                <assertSessionStateEquals key="slot1" value="val" />
                <assertSessionStateEquals key="slot2" value="123" />
                <assertSessionStillOpen />
            </yes>
        </session>
    </sessions>
</script>